name: Build Next.js app

# TRIGGERS
on:
  push:
    branches:
      - '*'             # matches every branch that doesn't contain a '/'
      - '*/*'           # matches every branch containing a single '/'
      - '**'            # matches every branch
    #   - "!main"         # exclude "main"
    #   - "!beta"         # exclude "beta"
    #   - "!prerelease"   # exclude "prerelease"

# ENVIRONMENT VARIABLES
# env:
#   NODE_ENV: production

# CI/CD STEPS
jobs:
  docker-build:
    name: Docker build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install package dependencies
        run: pnpm install

      - name: Build source code
        run: pnpm build

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx

      - name: Build Docker & push image to Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.prod
          push: true
          tags: digitop/t3-app-starter:latest,digitop/t3-app-starter:v1
          # platforms: |
          #   linux/amd64
          #   linux/arm64
          cache-from: type=registry,ref=digitop/t3-app-starter:cache
          cache-to: type=registry,ref=digitop/t3-app-starter:cache,mode=max